public class JSON2Apex {

    
     public class Rates {        
        public Double AED {get;set;} 
		public Double AFN {get;set;} 
		public Double ALL {get;set;} 
		public Double AMD {get;set;} 
		public Double ANG {get;set;} 
		public Double AOA {get;set;} 
		public Double ARS {get;set;} 
		public Double AUD {get;set;} 
		public Double AWG {get;set;} 
		public Double AZN {get;set;} 
		public Double BAM {get;set;} 
		public Double BBD {get;set;} 
		public Double BDT {get;set;} 
		public Double BGN {get;set;} 
		public Double BHD {get;set;} 
		public Double BIF {get;set;} 
		public Double BMD {get;set;} 
		public Double BND {get;set;} 
		public Double BOB {get;set;} 
		public Double BRL {get;set;} 
		public Double BSD {get;set;} 
		public Double BTC {get;set;} 
		public Double BTN {get;set;} 
		public Double BWP {get;set;} 
		public Double BYN {get;set;} 
		public Double BYR {get;set;} 
		public Double BZD {get;set;} 
		public Double CAD {get;set;} 
		public Double CDF {get;set;} 
		public Double CHF {get;set;} 
		public Double CLF {get;set;} 
		public Double CLP {get;set;} 
		public Double CNY {get;set;} 
		public Double COP {get;set;} 
		public Double CRC {get;set;} 
		public Double CUC {get;set;} 
		public Double CUP {get;set;} 
		public Double CVE {get;set;} 
		public Double CZK {get;set;} 
		public Double DJF {get;set;} 
		public Double DKK {get;set;} 
		public Double DOP {get;set;} 
		public Double DZD {get;set;} 
		public Double EGP {get;set;} 
		public Double ERN {get;set;} 
		public Double ETB {get;set;} 
		public Double EUR {get;set;} 
		public Double FJD {get;set;} 
		public Double FKP {get;set;} 
		public Double GBP {get;set;} 
		public Double GEL {get;set;} 
		public Double GGP {get;set;} 
		public Double GHS {get;set;} 
		public Double GIP {get;set;} 
		public Double GMD {get;set;} 
		public Double GNF {get;set;} 
		public Double GTQ {get;set;} 
		public Double GYD {get;set;} 
		public Double HKD {get;set;} 
		public Double HNL {get;set;} 
		public Double HRK {get;set;} 
		public Double HTG {get;set;} 
		public Double HUF {get;set;} 
		public Double IDR {get;set;} 
		public Double ILS {get;set;} 
		public Double IMP {get;set;} 
		public Double INR {get;set;} 
		public Double IQD {get;set;} 
		public Double IRR {get;set;} 
		public Double ISK {get;set;} 
		public Double JEP {get;set;} 
		public Double JMD {get;set;} 
		public Double JOD {get;set;} 
		public Double JPY {get;set;} 
		public Double KES {get;set;} 
		public Double KGS {get;set;} 
		public Double KHR {get;set;} 
		public Double KMF {get;set;} 
		public Double KPW {get;set;} 
		public Double KRW {get;set;} 
		public Double KWD {get;set;} 
		public Double KYD {get;set;} 
		public Double KZT {get;set;} 
		public Double LAK {get;set;} 
		public Double LBP {get;set;} 
		public Double LKR {get;set;} 
		public Double LRD {get;set;} 
		public Double LSL {get;set;} 
		public Double LTL {get;set;} 
		public Double LVL {get;set;} 
		public Double LYD {get;set;} 
		public Double MAD {get;set;} 
		public Double MDL {get;set;} 
		public Double MGA {get;set;} 
		public Double MKD {get;set;} 
		public Double MMK {get;set;} 
		public Double MNT {get;set;} 
		public Double MOP {get;set;} 
		public Double MRO {get;set;} 
		public Double MUR {get;set;} 
		public Double MVR {get;set;} 
		public Double MWK {get;set;} 
		public Double MXN {get;set;} 
		public Double MYR {get;set;} 
		public Double MZN {get;set;} 
		public Double NAD {get;set;} 
		public Double NGN {get;set;} 
		public Double NIO {get;set;} 
		public Double NOK {get;set;} 
		public Double NPR {get;set;} 
		public Double NZD {get;set;} 
		public Double OMR {get;set;} 
		public Double PAB {get;set;} 
		public Double PEN {get;set;} 
		public Double PGK {get;set;} 
		public Double PHP {get;set;} 
		public Double PKR {get;set;} 
		public Double PLN {get;set;} 
		public Double PYG {get;set;} 
		public Double QAR {get;set;} 
		public Double RON {get;set;} 
		public Double RSD {get;set;} 
		public Double RUB {get;set;} 
		public Double RWF {get;set;} 
		public Double SAR {get;set;} 
		public Double SBD {get;set;} 
		public Double SCR {get;set;} 
		public Double SDG {get;set;} 
		public Double SEK {get;set;} 
		public Double SGD {get;set;} 
		public Double SHP {get;set;} 
		public Double SLL {get;set;} 
		public Double SOS {get;set;} 
		public Double SRD {get;set;} 
		public Double STD {get;set;} 
		public Double SVC {get;set;} 
		public Double SYP {get;set;} 
		public Double SZL {get;set;} 
		public Double THB {get;set;} 
		public Double TJS {get;set;} 
		public Double TMT {get;set;} 
		public Double TND {get;set;} 
		public Double TOP {get;set;} 
		public Double TRY_Z {get;set;} 
		public Double TTD {get;set;} 
		public Double TWD {get;set;} 
		public Double TZS {get;set;} 
		public Double UAH {get;set;} 
		public Double UGX {get;set;} 
		public Double USD {get;set;} 
		public Double UYU {get;set;} 
		public Double UZS {get;set;} 
		public Double VEF {get;set;} 
		public Double VND {get;set;} 
		public Double VUV {get;set;} 
		public Double WST {get;set;} 
		public Double XAF {get;set;} 
		public Double XAG {get;set;} 
		public Double XAU {get;set;} 
		public Double XCD {get;set;} 
		public Double XDR {get;set;} 
		public Double XOF {get;set;} 
		public Double XPF {get;set;} 
		public Double YER {get;set;} 
		public Double ZAR {get;set;} 
		public Double ZMK {get;set;} 
		public Double ZMW {get;set;} 
		public Double ZWL {get;set;} 
         
		public Rates(JSONParser parser) {
            
          /*   Map<String, Schema.SObjectField> fieldMap = Schema.SObjectType.pac_so_youn__Exchange_Rate__c.fields.getMap();
             List<String> str = new List<String>();
             for(Schema.SObjectField f:fieldMap.values()) {
             String res = f.getDescribe().getLabel();
             str.add(res);
             }*/
            
                           List<String> CurrencyLabel = new List<String>();
                           List<Schema.PicklistEntry> picklistValues = pac_so_youn__Exchange_Rate__c.pac_so_youn__BaseCurrency__c.getDescribe().getPicklistValues();
  
                           for(Schema.PicklistEntry p:picklistValues) {
                            CurrencyLabel.add(p.getLabel());
                           } 
            
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {

                          for(String s: CurrencyLabel){
                           if (text == s) {
						    
                        switch on text {
                          when 'AED' {
							AED = parser.getDoubleValue();
                              break;
						} when 'AFN' {
							AFN = parser.getDoubleValue();
                            break;
						} when  'ALL' {
							ALL = parser.getDoubleValue();
                            break;
						} when  'AMD' {
							AMD = parser.getDoubleValue();
                            break;
						} when  'ANG' {
							ANG = parser.getDoubleValue();
                            break;
						} when 'AOA' {
							AOA = parser.getDoubleValue();
                            break;
						} when  'ARS' {
							ARS = parser.getDoubleValue();
                            break;
						} when  'AUD' {
							AUD = parser.getDoubleValue();
                            break;
						} when 'AWG' {
							AWG = parser.getDoubleValue();
                            break;
						} when  'AZN' {
							AZN = parser.getDoubleValue();
                            break;
						} when  'BAM' {
							BAM = parser.getDoubleValue();
                            break;
						} when  'BBD' {
							BBD = parser.getDoubleValue();
                            break;
						} when  'BDT' {
							BDT = parser.getDoubleValue();
                            break;
						} when  'BGN' {
							BGN = parser.getDoubleValue();
                            break;
						} when  'BHD' {
							BHD = parser.getDoubleValue();
                            break;
						} when  'BIF' {
							BIF = parser.getDoubleValue();
                            break;
						} when  'BMD' {
							BMD = parser.getDoubleValue();
                            break;
						} when  'BND' {
							BND = parser.getDoubleValue();
                            break;
						} when  'BOB' {
							BOB = parser.getDoubleValue();
                            break;
						} when  'BRL' {
							BRL = parser.getDoubleValue();
                            break;
						} when  'BSD' {
							BSD = parser.getDoubleValue();
                            break;
						} when  'BTC' {
							BTC = parser.getDoubleValue();
                            break;
						} when  'BTN' {
							BTN = parser.getDoubleValue();
                            break;
						} when  'BWP' {
							BWP = parser.getDoubleValue();
                            break;
						} when  'BYN' {
							BYN = parser.getDoubleValue();
                            break;
						} when  'BYR' {
							BYR = parser.getDoubleValue();
                            break;
						} when  'BZD' {
							BZD = parser.getDoubleValue();
                            break;
						} when  'KZT' {
							KZT = parser.getDoubleValue();
                            break;
						} when  'CDF' {
							CDF = parser.getDoubleValue();
                            break;
						} when  'CHF' {
							CHF = parser.getDoubleValue();
                            break;
						} when  'CLF' {
							CLF = parser.getDoubleValue();
                            break;
						} when  'CLP' {
							CLP = parser.getDoubleValue();
                            break;
						} when  'CNY' {
							CNY = parser.getDoubleValue();
                            break;
						} when 'COP' {
							COP = parser.getDoubleValue();
                            break;
						} when  'CRC' {
							CRC = parser.getDoubleValue();
                            break;
						} when  'CUC' {
							CUC = parser.getDoubleValue();
                            break;
						} when  'CUP' {
							CUP = parser.getDoubleValue();
                            break;
						} when  'CVE' {
							CVE = parser.getDoubleValue();
                            break;
						} when  'CZK' {
							CZK = parser.getDoubleValue();
                            break;
						} when  'DJF' {
							DJF = parser.getDoubleValue();
                            break;
						} when  'DKK' {
							DKK = parser.getDoubleValue();
                            break;
						} when  'DOP' {
							DOP = parser.getDoubleValue();
                            break;
						} when 'DZD' {
							DZD = parser.getDoubleValue();
                            break;
						} when  'EGP' {
							EGP = parser.getDoubleValue();
                            break;
						} when  'ERN' {
							ERN = parser.getDoubleValue();
                            break;
						} when  'ETB' {
							ETB = parser.getDoubleValue();
                            break;
						} when  'KYD' {
							KYD = parser.getIntegerValue();
                            break;
						} when  'FJD' {
							FJD = parser.getDoubleValue();
                            break;
						} when  'FKP' {
							FKP = parser.getDoubleValue();
                            break;
						} when  'LAK' {
							LAK = parser.getDoubleValue();
                            break;
						} when  'GEL' {
							GEL = parser.getDoubleValue();
                            break;
						} when  'GGP' {
							GGP = parser.getDoubleValue();
                            break;
						} when  'GHS' {
							GHS = parser.getDoubleValue();
                            break;
						} when  'GIP' {
							GIP = parser.getDoubleValue();
                            break;	

						} when  'GMD' {
							GMD = parser.getDoubleValue();
                            break;
						} when  'GNF' {
							GNF = parser.getDoubleValue();
                            break;
						} when  'GTQ' {
							GTQ = parser.getDoubleValue();
                            break;
						} when  'GYD' {
							GYD = parser.getDoubleValue();
                            break;
						} when  'HKD' {
							HKD = parser.getDoubleValue();
                            break;
						} when  'HNL' {
							HNL = parser.getDoubleValue();
                            break;
						} when  'HRK' {
							HRK = parser.getDoubleValue();
                            break;
						} when  'HTG' {
							HTG = parser.getDoubleValue();
                            break;
						} when  'HUF' {
							HUF = parser.getDoubleValue();
                            break;
						} when  'IDR' {
							IDR = parser.getDoubleValue();
                            break;
						} when  'ILS' {
							ILS = parser.getDoubleValue();
                            break;
						} when  'IMP' {
							IMP = parser.getDoubleValue();
                            break;
						} when  'INR' {
							INR = parser.getDoubleValue();
                            break;
						} when  'IQD' {
							IQD = parser.getDoubleValue();
                            break;
						} when  'IRR' {
							IRR = parser.getDoubleValue();
                            break;
						} when  'ISK' {
							ISK = parser.getDoubleValue();
                            break;
						} when 'JEP' {
							JEP = parser.getDoubleValue();
                            break;
						} when  'JMD' {
							JMD = parser.getDoubleValue();
                            break;
						} when  'JOD' {
							JOD = parser.getDoubleValue();
                            break;
						} when  'JPY' {
							JPY = parser.getDoubleValue();
                            break;
						} when  'KES' {
							KES = parser.getDoubleValue();
                            break;
						} when  'KGS' {
							KGS = parser.getDoubleValue();
                            break;
						} when  'KHR' {
							KHR = parser.getDoubleValue();
                            break;
						} when  'KMF' {
							KMF = parser.getDoubleValue();
                            break;
						} when   'KPW' {
							KPW = parser.getDoubleValue();
                            break;
						} when  'KRW' {
							KRW = parser.getDoubleValue();
                            break;
						} when  'KWD' {
							KWD = parser.getDoubleValue();
                            break;
						} when  'EUR' {
							EUR = parser.getDoubleValue();//EUR
                            break;
						} when  'CAD' {
							CAD = parser.getDoubleValue();//CAD
                            break;
						} when  'GBP' {
							GBP = parser.getDoubleValue();//GBP
                            break;
						}  when  'USD' {
							USD = parser.getDoubleValue();//USD
                            break;
						} 
                     }                  
			        } 
                   }
                        
                        
                        
//-----------------------------------------------------------------                        
                    }
                    
				}
			}
           
		}
	}
	
	public Rates rates {get;set;} 
	public String base {get;set;} 
	public String date_string {get;set;} 

	public JSON2Apex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'rates') {
						rates = new Rates(parser);
					} else if (text == 'base') {
						base = parser.getText();
					} else if (text == 'date') {
						date_string = parser.getText();
					}
				}
			}
		}
	}
	
	
	public static JSON2Apex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new JSON2Apex(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
}